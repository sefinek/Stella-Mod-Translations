<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="linkLabel1.Text" xml:space="preserve">
    <value>Кошка</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>» Животные</value>
  </data>
  <data name="linkLabel2.Text" xml:space="preserve">
    <value>Собака</value>
  </data>
  <data name="linkLabel3.Text" xml:space="preserve">
    <value>Лиса</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>Аниме</value>
  </data>
  <data name="linkLabel4.Text" xml:space="preserve">
    <value>Сэнко</value>
  </data>
  <data name="linkLabel5.Text" xml:space="preserve">
    <value>Девушка-лиса</value>
  </data>
  <data name="linkLabel5.ToolTip" xml:space="preserve">
    <value>Аниме девушки-лисы</value>
  </data>
  <data name="linkLabel6.Text" xml:space="preserve">
    <value>Девушка-кошка</value>
  </data>
  <data name="linkLabel6.ToolTip" xml:space="preserve">
    <value>Аниме девушки-кошки</value>
  </data>
  <data name="linkLabel7.Text" xml:space="preserve">
    <value>Кофе</value>
  </data>
  <data name="linkLabel42.Text" xml:space="preserve">
    <value>Голограмма</value>
  </data>
  <data name="linkLabel43.Text" xml:space="preserve">
    <value>Хвост</value>
  </data>
  <data name="linkLabel44.Text" xml:space="preserve">
    <value>Широ</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>» YouTube видео</value>
  </data>
  <data name="linkLabel45.Text" xml:space="preserve">
    <value>Half-Life Кошка</value>
  </data>
  <data name="poweredBy_Label.Text" xml:space="preserve">
    <value>Работает от: {0}</value>
  </data>
  <data name="linkLabel8.Text" xml:space="preserve">
    <value>Мило</value>
  </data>
  <data name="linkLabel9.Text" xml:space="preserve">
    <value>Униформа</value>
  </data>
  <data name="linkLabel10.Text" xml:space="preserve">
    <value>Хвост с лентой</value>
  </data>
  <data name="linkLabel11.Text" xml:space="preserve">
    <value>VTuber</value>
  </data>
  <data name="linkLabel12.Text" xml:space="preserve">
    <value>Матросская форма</value>
  </data>
  <data name="linkLabel13.Text" xml:space="preserve">
    <value>Школьница</value>
  </data>
  <data name="linkLabel14.Text" xml:space="preserve">
    <value>Сидеть в позе W</value>
  </data>
  <data name="linkLabel15.Text" xml:space="preserve">
    <value>Лежать</value>
  </data>
  <data name="linkLabel16.Text" xml:space="preserve">
    <value>Юбка</value>
  </data>
  <data name="linkLabel17.Text" xml:space="preserve">
    <value>Длинные волосы</value>
  </data>
  <data name="linkLabel18.Text" xml:space="preserve">
    <value>Улыбка</value>
  </data>
  <data name="linkLabel19.Text" xml:space="preserve">
    <value>Горничная</value>
  </data>
  <data name="linkLabel20.Text" xml:space="preserve">
    <value>Носки до бёдер</value>
  </data>
  <data name="linkLabel21.Text" xml:space="preserve">
    <value>Носки до колен</value>
  </data>
  <data name="linkLabel22.Text" xml:space="preserve">
    <value>Гетерохромия</value>
  </data>
  <data name="linkLabel23.Text" xml:space="preserve">
    <value>Подмигивать</value>
  </data>
  <data name="linkLabel24.Text" xml:space="preserve">
    <value>Платье</value>
  </data>
  <data name="linkLabel25.Text" xml:space="preserve">
    <value>Ленты</value>
  </data>
  <data name="linkLabel26.Text" xml:space="preserve">
    <value>Толстовка с капюшоном</value>
  </data>
  <data name="linkLabel27.Text" xml:space="preserve">
    <value>Повседневная одежда</value>
  </data>
  <data name="linkLabel28.Text" xml:space="preserve">
    <value>Чёрные колготки</value>
  </data>
  <data name="linkLabel29.Text" xml:space="preserve">
    <value>Белые волосы</value>
  </data>
  <data name="linkLabel30.Text" xml:space="preserve">
    <value>Розовые волосы</value>
  </data>
  <data name="linkLabel31.Text" xml:space="preserve">
    <value>Синие волосы</value>
  </data>
  <data name="linkLabel32.Text" xml:space="preserve">
    <value>Валентин</value>
  </data>
  <data name="linkLabel33.Text" xml:space="preserve">
    <value>Синий архив</value>
  </data>
  <data name="linkLabel34.Text" xml:space="preserve">
    <value>Посетите наш booru, чтобы увидеть еще больше очаровательных фотографий! Нажмите сюда.</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Случайные картинки из аниме</value>
  </data>
</root>